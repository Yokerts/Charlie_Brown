{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Charlie_Brown\\\\react\\\\src\\\\components\\\\Estandar\\\\Estandar.js\";\nimport React, { Component, Fragment } from 'react';\nimport UsuarioService from \"../../services/Usuario/UsuarioService\";\nimport PagoService from \"../../services/Pagos/PagosService\";\nimport CargoService from \"../../services/Cargo/CargoService\";\nimport SaldoService from \"../../services/Saldo/SaldoService\";\nimport Header from \"../../includes/Header\";\nimport { AddOutlined, DeleteOutlined, EditOutlined, SearchOutlined } from '@material-ui/icons';\nimport BotonFlotante from \"../../includes/BotonFlotante\";\nimport ModalUsuario from \"./includes/ModaUsuario\";\nimport { CONFIG } from \"../../settings/Config/Config\";\nimport { ReactLocalStorageService } from \"../../settings/Libs/Libs\";\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from '@material-ui/core/Button';\n\nclass Estandar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.RefrechList = () => {\n      this.all();\n    };\n\n    this.all = () => {\n      UsuarioService.all().then(response => {\n        this.setState({\n          lista_saldos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_saldos: []\n        });\n        alert(error.mensaje);\n      });\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      UsuarioService.show(params).then(response => {\n        this.setState({\n          saldo_total: response.data.saldo\n        });\n      }).catch(error => {\n        this.setState({\n          lista: []\n        });\n        alert(error.mensaje);\n      });\n      this.listSaldos();\n    };\n\n    this.listSaldos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      SaldoService.all(params).then(response => {\n        this.setState({\n          lista_pagos: [],\n          lista_saldos: response.data,\n          lista_cargos: []\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.listCargos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      CargoService.get(params).then(response => {\n        this.setState({\n          lista_pagos: [],\n          lista_saldos: [],\n          lista_cargos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.listPagos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      PagoService.all(params).then(response => {\n        this.setState({\n          lista_cargos: [],\n          lista_saldos: [],\n          lista_pagos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.pagos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      PagoService.add(params).then(response => {\n        this.setState({\n          lista_pagos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_saldos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.delete = item => {\n      UsuarioService.delete(item).then(response => {\n        alert(response.mensaje);\n        this.RefrechList();\n      }).catch(error => {\n        alert(error.mensaje);\n      });\n    };\n\n    let Usr = ReactLocalStorageService.get('Usr') || {};\n    this.state = {\n      params: props.match.params,\n      lista_saldos: [],\n      lista_cargos: [],\n      id_usuario: Usr.id_usuario,\n      mes_inicio: new Date(),\n      mes_fin: new Date()\n    };\n    this.all();\n  }\n\n  render() {\n    const params = this.props.match.params;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        padding: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"left\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Saldo Total\",\n      type: \"text\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      disabled: true,\n      fullWidth: true,\n      value: this.state.saldo_total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Fecha de cargo\",\n      value: this.state.mes_inicio,\n      onChange: (e, value) => {\n        console.log(value);\n        this.updateDate(value);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Fecha de cargo\",\n      value: this.state.mes_fin,\n      onChange: (e, value) => {\n        console.log(value);\n        this.updateDate(value);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.getSaldo(),\n      color: \"default\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Consultar Saldo\"))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.addPagos(),\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Realizar Pago\"))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.getPagos(),\n      color: \"secondary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Mis Pagos\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.lista_saldos ? React.createElement(\"table\", {\n      style: {\n        width: '100%'\n      },\n      border: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Monto\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.lista_saldos.map((item, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, item.fecha_saldo), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, item.monto_saldo))))) : this.state.lista_cargos ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Hombre\") : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Mujer\")))));\n  }\n\n}\n\nexport default Estandar;","map":{"version":3,"sources":["C:/xampp/htdocs/Charlie_Brown/react/src/components/Estandar/Estandar.js"],"names":["React","Component","Fragment","UsuarioService","PagoService","CargoService","SaldoService","Header","AddOutlined","DeleteOutlined","EditOutlined","SearchOutlined","BotonFlotante","ModalUsuario","CONFIG","ReactLocalStorageService","Grid","TextField","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","Button","Estandar","constructor","props","state","RefrechList","all","then","response","setState","lista_saldos","data","catch","error","alert","mensaje","params","id_usuario","show","saldo_total","saldo","lista","listSaldos","lista_pagos","lista_cargos","listCargos","get","listPagos","pagos","add","delete","item","Usr","match","mes_inicio","Date","mes_fin","render","padding","textAlign","e","value","console","log","updateDate","margin","width","getSaldo","addPagos","getPagos","map","index","fecha_saldo","monto_saldo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAAQC,WAAR,EAAqBC,cAArB,EAAqCC,YAArC,EAAmDC,cAAnD,QAAwE,oBAAxE;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,SAAQC,wBAAR,QAAuC,0BAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,kBAAR,EAA4BC,uBAA5B,QAA0D,sBAA1D;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAN,SAAuBrB,SAAvB,CAAiC;AAI7BsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,KAEmB,GAFX,EAEW;;AAAA,SAgBnBC,WAhBmB,GAgBL,MAAM;AAChB,WAAKC,GAAL;AACH,KAlBkB;;AAAA,SAoBnBA,GApBmB,GAoBb,MAAM;AACRxB,MAAAA,cAAc,CAACwB,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AAClC,aAAKC,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAEF,QAAQ,CAACG;AADb,SAAd;AAGH,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAI,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAWA,UAAIC,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGAnC,MAAAA,cAAc,CAACoC,IAAf,CAAoBF,MAApB,EAA4BT,IAA5B,CAAiCC,QAAQ,IAAI;AACzC,aAAKC,QAAL,CAAc;AACVU,UAAAA,WAAW,EAAEX,QAAQ,CAACG,IAAT,CAAcS;AADjB,SAAd;AAGH,OAJD,EAIGR,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVY,UAAAA,KAAK,EAAE;AADG,SAAd;AAGAP,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAUA,WAAKO,UAAL;AACH,KA9CkB;;AAAA,SAgDnBA,UAhDmB,GAgDN,MAAM;AACf,UAAIN,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGAhC,MAAAA,YAAY,CAACqB,GAAb,CAAiBU,MAAjB,EAAyBT,IAAzB,CAA8BC,QAAQ,IAAI;AACtC,aAAKC,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAE,EADH;AAEVb,UAAAA,YAAY,EAAEF,QAAQ,CAACG,IAFb;AAGVa,UAAAA,YAAY,EAAE;AAHJ,SAAd;AAKH,OAND,EAMGZ,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAT,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KAhEkB;;AAAA,SAkEnBU,UAlEmB,GAkEN,MAAM;AACf,UAAIT,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGAjC,MAAAA,YAAY,CAAC0C,GAAb,CAAiBV,MAAjB,EAAyBT,IAAzB,CAA8BC,QAAQ,IAAI;AACtC,aAAKC,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAE,EADH;AAEVb,UAAAA,YAAY,EAAE,EAFJ;AAGVc,UAAAA,YAAY,EAAEhB,QAAQ,CAACG;AAHb,SAAd;AAKH,OAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAT,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KAlFkB;;AAAA,SAoFnBY,SApFmB,GAoFP,MAAM;AACd,UAAIX,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGAlC,MAAAA,WAAW,CAACuB,GAAZ,CAAgBU,MAAhB,EAAwBT,IAAxB,CAA6BC,QAAQ,IAAI;AACrC,aAAKC,QAAL,CAAc;AACVe,UAAAA,YAAY,EAAE,EADJ;AAEVd,UAAAA,YAAY,EAAE,EAFJ;AAGVa,UAAAA,WAAW,EAAEf,QAAQ,CAACG;AAHZ,SAAd;AAKH,OAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAT,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KApGkB;;AAAA,SAsGnBa,KAtGmB,GAsGX,MAAM;AACV,UAAIZ,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGAlC,MAAAA,WAAW,CAAC8C,GAAZ,CAAgBb,MAAhB,EAAwBT,IAAxB,CAA6BC,QAAQ,IAAI;AACrC,aAAKC,QAAL,CAAc;AACVc,UAAAA,WAAW,EAAEf,QAAQ,CAACG;AADZ,SAAd;AAGH,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAI,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAUH,KApHkB;;AAAA,SAsHnBe,MAtHmB,GAsHTC,IAAD,IAAU;AACfjD,MAAAA,cAAc,CAACgD,MAAf,CAAsBC,IAAtB,EAA4BxB,IAA5B,CAAiCC,QAAQ,IAAI;AACzCM,QAAAA,KAAK,CAACN,QAAQ,CAACO,OAAV,CAAL;AACA,aAAKV,WAAL;AACH,OAHD,EAGGO,KAHH,CAGSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OALD;AAMH,KA7HkB;;AAEf,QAAIiB,GAAG,GAAGtC,wBAAwB,CAACgC,GAAzB,CAA6B,KAA7B,KAAuC,EAAjD;AAEA,SAAKtB,KAAL,GAAa;AACTY,MAAAA,MAAM,EAAEb,KAAK,CAAC8B,KAAN,CAAYjB,MADX;AAGTN,MAAAA,YAAY,EAAE,EAHL;AAITc,MAAAA,YAAY,EAAE,EAJL;AAKTP,MAAAA,UAAU,EAAEe,GAAG,CAACf,UALP;AAMTiB,MAAAA,UAAU,EAAE,IAAIC,IAAJ,EANH;AAOTC,MAAAA,OAAO,EAAE,IAAID,IAAJ;AAPA,KAAb;AASA,SAAK7B,GAAL;AACH;;AAiHD+B,EAAAA,MAAM,GAAG;AAAA,UAEErB,MAFF,GAEY,KAAKb,KAAL,CAAW8B,KAFvB,CAEEjB,MAFF;AAIL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD,oBAAY,KAAKb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAII;AAAK,MAAA,KAAK,EAAE;AAACmC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,MAAxC;AAA+C,MAAA,UAAU,EAAC,QAA1D;AAAmE,MAAA,OAAO,EAAE,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,MAAM,EAAC,QAHX;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,QAAQ,EAAE,IALd;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWe,WAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFJ,EAgBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAExC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,cAAc,MADlB;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,MAAM,EAAC,YAHX;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,EAAE,EAAC,oBALP;AAMI,MAAA,KAAK,EAAC,gBANV;AAOI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAW8B,UAPtB;AAQI,MAAA,QAAQ,EAAE,CAACM,CAAD,EAAIC,KAAJ,KAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKG,UAAL,CAAgBH,KAAhB;AACH,OAXL;AAYI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAhBJ,EAsCI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAExC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,cAAc,MADlB;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,MAAM,EAAC,YAHX;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,EAAE,EAAC,oBALP;AAMI,MAAA,KAAK,EAAC,gBANV;AAOI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWgC,OAPtB;AAQI,MAAA,QAAQ,EAAE,CAACI,CAAD,EAAIC,KAAJ,KAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKG,UAAL,CAAgBH,KAAhB;AACH,OAXL;AAYI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAtCJ,EA6DI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,EAA3D;AAA4E,MAAA,KAAK,EAAC,SAAlF;AAA4F,MAAA,OAAO,EAAC,WAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,CA7DJ,EAoEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACR,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,EAA3D;AAA4E,MAAA,KAAK,EAAC,SAAlF;AAA4F,MAAA,OAAO,EAAC,WAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CApEJ,EA2EI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACT,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKG,QAAL,EAA3D;AAA4E,MAAA,KAAK,EAAC,WAAlF;AAA8F,MAAA,OAAO,EAAC,WAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CA3EJ,EAmFI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,EAAvC;AAA2C,MAAA,EAAE,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ,KAAK7C,KAAL,CAAWM,YAAX,GACI;AAAO,MAAA,KAAK,EAAE;AAACoC,QAAAA,KAAK,EAAE;AAAR,OAAd;AAA+B,MAAA,MAAM,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK1C,KAAL,CAAWM,YAAX,CAAwBwC,GAAxB,CAA4B,CAACnB,IAAD,EAAOoB,KAAP,KACzB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKpB,IAAI,CAACqB,WAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrB,IAAI,CAACsB,WAAV,CAFJ,CADH,CADD,CAPJ,CADJ,GAiBI,KAAKjD,KAAL,CAAWoB,YAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,GAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBZ,CAnFJ,CADJ,CAJJ,CADJ;AAyHH;;AAhQ4B;;AAmQjC,eAAevB,QAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\n\r\nimport UsuarioService from \"../../services/Usuario/UsuarioService\";\r\nimport PagoService from \"../../services/Pagos/PagosService\";\r\nimport CargoService from \"../../services/Cargo/CargoService\";\r\nimport SaldoService from \"../../services/Saldo/SaldoService\";\r\nimport Header from \"../../includes/Header\";\r\n\r\nimport {AddOutlined, DeleteOutlined, EditOutlined, SearchOutlined} from '@material-ui/icons';\r\n\r\nimport BotonFlotante from \"../../includes/BotonFlotante\";\r\nimport ModalUsuario from \"./includes/ModaUsuario\";\r\nimport {CONFIG} from \"../../settings/Config/Config\";\r\nimport {ReactLocalStorageService} from \"../../settings/Libs/Libs\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Estandar extends Component {\r\n\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let Usr = ReactLocalStorageService.get('Usr') || {};\r\n\r\n        this.state = {\r\n            params: props.match.params,\r\n\r\n            lista_saldos: [],\r\n            lista_cargos: [],\r\n            id_usuario: Usr.id_usuario,\r\n            mes_inicio: new Date(),\r\n            mes_fin: new Date(),\r\n        };\r\n        this.all();\r\n    }\r\n\r\n    RefrechList = () => {\r\n        this.all();\r\n    };\r\n\r\n    all = () => {\r\n        UsuarioService.all().then(response => {\r\n            this.setState({\r\n                lista_saldos: response.data,\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_saldos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        UsuarioService.show(params).then(response => {\r\n            this.setState({\r\n                saldo_total: response.data.saldo\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n        this.listSaldos();\r\n    };\r\n\r\n    listSaldos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        SaldoService.all(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: [],\r\n                lista_saldos: response.data,\r\n                lista_cargos: []\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    listCargos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        CargoService.get(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: [],\r\n                lista_saldos: [],\r\n                lista_cargos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    listPagos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        PagoService.all(params).then(response => {\r\n            this.setState({\r\n                lista_cargos: [],\r\n                lista_saldos: [],\r\n                lista_pagos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    pagos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        PagoService.add(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_saldos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    delete = (item) => {\r\n        UsuarioService.delete(item).then(response => {\r\n            alert(response.mensaje);\r\n            this.RefrechList();\r\n        }).catch(error => {\r\n            alert(error.mensaje);\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const {params} = this.props.match;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header {...this.props}/>\r\n\r\n                <div style={{padding: '15px'}}>\r\n                    <Grid container direction=\"row\" justify=\"left\" alignItems=\"center\" spacing={2}>\r\n\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"center\"}}>\r\n\r\n                                <TextField\r\n                                    label=\"Saldo Total\"\r\n                                    type=\"text\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    disabled={true}\r\n                                    fullWidth\r\n                                    value={this.state.saldo_total}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"right\"}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Fecha de cargo\"\r\n                                        value={this.state.mes_inicio}\r\n                                        onChange={(e, value) => {\r\n                                            console.log(value);\r\n                                            this.updateDate(value)\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"right\"}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Fecha de cargo\"\r\n                                        value={this.state.mes_fin}\r\n                                        onChange={(e, value) => {\r\n                                            console.log(value);\r\n                                            this.updateDate(value)\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.getSaldo()} color=\"default\" variant=\"contained\">\r\n                                    Consultar Saldo\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.addPagos()} color=\"primary\" variant=\"contained\">\r\n                                    Realizar Pago\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.getPagos()} color=\"secondary\" variant=\"contained\">\r\n                                    Mis Pagos\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n\r\n                            {\r\n                                this.state.lista_saldos ? (\r\n                                    <table style={{width: '100%'}} border={1}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Fecha</th>\r\n                                            <th>Monto</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {this.state.lista_saldos.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{item.fecha_saldo}</td>\r\n                                                <td>{item.monto_saldo}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                ) : this.state.lista_cargos ? (\r\n                                    <h1>Hombre</h1>\r\n                                ):(\r\n                                    <h1>Mujer</h1>\r\n                                )}\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Estandar;\r\n"]},"metadata":{},"sourceType":"module"}