{"ast":null,"code":"import { HttpRequest } from '../../settings/Libs/Libs';\n\nclass CargoService {}\n\nCargoService.all = () => {\n  let params = {};\n  return new Promise((resolve, reject) => {\n    HttpRequest.post('_cargo_agregar', params).then(response => {\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nCargoService.xid = item => {\n  let params = {\n    id_cat_sexo: item.id_cat_sexo\n  };\n  return new Promise((resolve, reject) => {\n    HttpRequest.post('_cargo_xid', params).then(response => {\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nexport default CargoService;","map":{"version":3,"sources":["C:/xampp/htdocs/Charlie_Brown/react/src/services/Cargo/CargoService.js"],"names":["HttpRequest","CargoService","all","params","Promise","resolve","reject","post","then","response","catch","error","xid","item","id_cat_sexo"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,0BAA1B;;AAEA,MAAMC,YAAN,CAAmB;;AAAbA,Y,CAGKC,G,GAAM,MAAM;AACf,MAAIC,MAAM,GAAG,EAAb;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,IAAAA,WAAW,CAACO,IAAZ,CAAiB,gBAAjB,EAAmCJ,MAAnC,EAA2CK,IAA3C,CAAiDC,QAAD,IAAc;AAC1DJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAEUC,KAAD,IAAW;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH,C;;AAZCV,Y,CAcKW,G,GAAOC,IAAD,IAAU;AACnB,MAAIV,MAAM,GAAG;AACTW,IAAAA,WAAW,EAAED,IAAI,CAACC;AADT,GAAb;AAGA,SAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,IAAAA,WAAW,CAACO,IAAZ,CAAiB,YAAjB,EAA+BJ,MAA/B,EAAuCK,IAAvC,CAA6CC,QAAD,IAAc;AACtDJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAEUC,KAAD,IAAW;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAOH,C;;AAGL,eAAeV,YAAf","sourcesContent":["import {HttpRequest} from '../../settings/Libs/Libs';\r\n\r\nclass CargoService {\r\n\r\n\r\n    static all = () => {\r\n        let params = {};\r\n        return new Promise((resolve, reject) => {\r\n            HttpRequest.post('_cargo_agregar', params).then((response) => {\r\n                resolve(response);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n\r\n    static xid = (item) => {\r\n        let params = {\r\n            id_cat_sexo: item.id_cat_sexo\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            HttpRequest.post('_cargo_xid', params).then((response) => {\r\n                resolve(response);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n}\r\n\r\nexport default CargoService;\r\n"]},"metadata":{},"sourceType":"module"}