{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\Charlie_Brown\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Charlie_Brown\\\\react\\\\src\\\\includes\\\\Header.js\";\nimport React, { Component, Fragment } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { HomeOutlined, ListAltOutlined, MenuOutlined, PersonOutlined } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport $State, { ReactLocalStorageService } from '../settings/Libs/Libs';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from '@material-ui/core/Hidden';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.openMenu = () => {\n      this.setState({\n        menu: true\n      });\n    };\n\n    this.closeMenu = () => {\n      this.setState({\n        menu: false\n      });\n    };\n\n    this.Login = () => {\n      $State.go(this.props, 'login', {});\n    };\n\n    this.Home = () => {\n      $State.go(this.props, 'home', {});\n    };\n\n    this.Administrador = () => {\n      $State.go(this.props, 'administrador', {});\n    };\n\n    this.Estandar = () => {\n      $State.go(this.props, 'estandar', {});\n    };\n\n    this.state = {\n      menu: false\n    };\n  }\n\n  render() {\n    let Usr = ReactLocalStorageService.get('Usr') || {};\n    const drawerWidth = 240;\n    const classes = makeStyles(theme => ({\n      root: {\n        display: 'flex'\n      },\n      drawer: {\n        [theme.breakpoints.up('sm')]: {\n          width: drawerWidth,\n          flexShrink: 0\n        }\n      },\n      appBar: {\n        [theme.breakpoints.up('sm')]: {\n          width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n          marginLeft: drawerWidth\n        }\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n          display: 'none'\n        }\n      },\n      toolbar: theme.mixins.toolbar,\n      drawerPaper: {\n        width: drawerWidth\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n      }\n    }));\n    const container = this.props.container;\n    const theme = useTheme;\n\n    const _React$useState = React.useState(false),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          mobileOpen = _React$useState2[0],\n          setMobileOpen = _React$useState2[1];\n\n    const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      style: {\n        background: '#424242'\n      },\n      position: \"static\",\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: this.openMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(MenuOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        flexGrow: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Charlie Brown\"), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"mailbox folders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      smUp: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      container: container,\n      variant: \"temporary\",\n      anchor: theme.direction === 'rtl' ? 'right' : 'left',\n      open: mobileOpen,\n      onClose: handleDrawerToggle,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, drawer)), React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      classes: {\n        paper: classes.drawerPaper\n      },\n      variant: \"permanent\",\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, drawer))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/xampp/htdocs/Charlie_Brown/react/src/includes/Header.js"],"names":["React","Component","Fragment","AppBar","Toolbar","IconButton","HomeOutlined","ListAltOutlined","MenuOutlined","PersonOutlined","Typography","Button","$State","ReactLocalStorageService","Drawer","Hidden","List","ListItem","ListItemIcon","ListItemText","makeStyles","useTheme","Divider","InboxIcon","MailIcon","PropTypes","Header","constructor","props","state","openMenu","setState","menu","closeMenu","Login","go","Home","Administrador","Estandar","render","Usr","get","drawerWidth","classes","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","container","useState","mobileOpen","setMobileOpen","handleDrawerToggle","map","text","index","background","direction","paper","keepMounted"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {HomeOutlined, ListAltOutlined, MenuOutlined, PersonOutlined} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport $State, {ReactLocalStorageService} from '../settings/Libs/Libs';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from '@material-ui/core/Hidden';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PropTypes from 'prop-types';\n\n\nclass Header extends Component {\n\n    state = {};\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: false\n        };\n    }\n\n    openMenu = () => {\n        this.setState({\n            menu: true\n        })\n    };\n\n    closeMenu = () => {\n        this.setState({\n            menu: false\n        })\n    };\n\n    Login = () => {\n        $State.go(this.props, 'login', {});\n    };\n\n    Home = () => {\n        $State.go(this.props, 'home', {});\n    };\n\n    Administrador = () => {\n        $State.go(this.props, 'administrador', {});\n    };\n\n    Estandar = () => {\n        $State.go(this.props, 'estandar', {});\n    };\n\n    render() {\n        let Usr = ReactLocalStorageService.get('Usr') || {};\n\n        const drawerWidth = 240;\n\n        const classes = makeStyles(theme => ({\n            root: {\n                display: 'flex',\n            },\n            drawer: {\n                [theme.breakpoints.up('sm')]: {\n                    width: drawerWidth,\n                    flexShrink: 0,\n                },\n            },\n            appBar: {\n                [theme.breakpoints.up('sm')]: {\n                    width: `calc(100% - ${drawerWidth}px)`,\n                    marginLeft: drawerWidth,\n                },\n            },\n            menuButton: {\n                marginRight: theme.spacing(2),\n                [theme.breakpoints.up('sm')]: {\n                    display: 'none',\n                },\n            },\n            toolbar: theme.mixins.toolbar,\n            drawerPaper: {\n                width: drawerWidth,\n            },\n            content: {\n                flexGrow: 1,\n                padding: theme.spacing(3),\n            },\n        }));\n\n        const { container } = this.props;\n        const theme = useTheme;\n        const [mobileOpen, setMobileOpen] = React.useState(false);\n\n        const handleDrawerToggle = () => {\n            setMobileOpen(!mobileOpen);\n        };\n\n        const drawer = (\n            <div>\n                <div className={classes.toolbar}/>\n                <Divider/>\n                <List>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider/>\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n\n\n\n        return (\n            <Fragment>\n                <AppBar style={{background: '#424242'}} position=\"static\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.openMenu}>\n                            <MenuOutlined/>\n                        </IconButton>\n                        <Typography variant=\"h6\" style={{flexGrow: 1}}>\n                            Charlie Brown\n                        </Typography>\n                        <Button color=\"inherit\" onClick={this.Login}>Login</Button>\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={container}\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                {/*<Drawer open={this.state.menu} onClose={this.closeMenu}>\n\n                    <div style={{\n                        height: '100px',\n                        width: '300px',\n                        textAlign: 'center',\n                        padding: '20px',\n                        background: '#424242',\n                        color: 'white'\n                    }}>\n                        <div style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            height: '100%',\n                            fontSize: '20px',\n                            textTransform: 'capitalize'\n                        }}>\n                            {Usr.username}\n                        </div>\n                    </div>\n\n                    <List>\n                        <ListItem button onClick={this.Home}>\n                            <ListItemIcon>\n                                <PersonOutlined/>\n                            </ListItemIcon>\n                            <ListItemText primary={'Usuario'}/>\n                        </ListItem>\n\n                        {Usr.id_cat_tipo_permiso == 1 ? <ListItem button onClick={this.Administrador}>\n                                <ListItemIcon>\n                                    <ListAltOutlined/>\n                                </ListItemIcon>\n                                <ListItemText primary={'Rol Administrador'}/>\n                            </ListItem> :\n                            <ListItem button onClick={this.Estandar}>\n                                <ListItemIcon>\n                                    <ListAltOutlined/>\n                                </ListItemIcon>\n                                <ListItemText primary={'Rol Estandar'}/>\n                            </ListItem>\n                        }\n                    </List>\n                </Drawer>*/}\n            </Fragment>\n        );\n    }\n}\n\n\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}