{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Charlie_Brown\\\\react\\\\src\\\\components\\\\Estandar\\\\Estandar.js\";\nimport React, { Component, Fragment } from 'react';\nimport UsuarioService from \"../../services/Usuario/UsuarioService\";\nimport PagoService from \"../../services/Pagos/PagosService\";\nimport CargoService from \"../../services/Cargo/CargoService\";\nimport SaldoService from \"../../services/Saldo/SaldoService\";\nimport Header from \"../../includes/Header\";\nimport { ReactLocalStorageService } from \"../../settings/Libs/Libs\";\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\nclass Estandar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.RefrechList = () => {\n      this.all();\n    };\n\n    this.all = () => {\n      UsuarioService.all().then(response => {\n        this.setState({\n          lista_saldos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_saldos: []\n        });\n        alert(error.mensaje);\n      });\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      UsuarioService.show(params).then(response => {\n        this.setState({\n          saldo_total: response.data.saldo\n        });\n      }).catch(error => {\n        this.setState({\n          lista: []\n        });\n        alert(error.mensaje);\n      });\n      this.listSaldos();\n    };\n\n    this.listSaldos = item => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n\n      if (item) {\n        params = {\n          id_usuario: this.state.id_usuario,\n          fecha_inicio: this.state.fecha_inicio,\n          fecha_fin: this.state.fecha_fin\n        };\n      }\n\n      SaldoService.all(params).then(response => {\n        this.setState({\n          lista_pagos: [],\n          lista_saldos: response.data,\n          lista_cargos: []\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.listCargos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario,\n        fecha_inicio: this.state.fecha_inicio,\n        fecha_fin: this.state.fecha_fin\n      };\n      CargoService.get(params).then(response => {\n        this.setState({\n          lista_pagos: [],\n          lista_saldos: [],\n          lista_cargos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.listPagos = item => {\n      let params = {\n        id_usuario: this.state.id_usuario,\n        fecha_inicio: this.state.fecha_inicio,\n        fecha_fin: this.state.fecha_fin\n      };\n      PagoService.show(params).then(response => {\n        this.setState({\n          lista_cargos: [],\n          lista_saldos: [],\n          lista_pagos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_pagos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.pagos = () => {\n      let params = {\n        id_usuario: this.state.id_usuario\n      };\n      PagoService.add(params).then(response => {\n        this.setState({\n          lista_pagos: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          lista_saldos: []\n        });\n        alert(error.mensaje);\n      });\n    };\n\n    this.delete = item => {\n      UsuarioService.delete(item).then(response => {\n        alert(response.mensaje);\n        this.RefrechList();\n      }).catch(error => {\n        alert(error.mensaje);\n      });\n    };\n\n    this.updateDate = date => {\n      this.setState({\n        fecha_inicio: date.toString()\n      });\n    };\n\n    this.updateDate2 = date => {\n      this.setState({\n        fecha_fin: date.toString()\n      });\n    };\n\n    let Usr = ReactLocalStorageService.get('Usr') || {};\n    this.state = {\n      params: props.match.params,\n      lista_saldos: [],\n      lista_cargos: [],\n      lista_pagos: [],\n      id_usuario: Usr.id_usuario,\n      fecha_inicio: new Date(),\n      fecha_fin: new Date()\n    };\n    this.all();\n  }\n\n  render() {\n    const params = this.props.match.params;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        padding: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Saldo Total\",\n      type: \"text\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      disabled: true,\n      fullWidth: true,\n      defaultValue: \"0.0\",\n      value: this.state.saldo_total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Fecha de cargo\",\n      value: this.state.fecha_inicio,\n      onChange: (e, value) => {\n        console.log(value);\n        this.updateDate(value);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      disableToolbar: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Fecha de cargo\",\n      value: this.state.fecha_fin,\n      onChange: (e, value) => {\n        console.log(value);\n        this.updateDate2(value);\n      },\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.listSaldos(true),\n      color: \"default\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Consultar Saldo\"))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.listCargos(),\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Realizar Pago\"))), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 12,\n      md: 4,\n      lg: 2,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '',\n        width: '100%'\n      },\n      onClick: () => this.listPagos(),\n      color: \"secondary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Mis Pagos\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.lista_saldos.length > 0 ? React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Saldos \", moment(this.state.fecha_inicio).format('DD/MM/YYYY') == moment(this.state.fecha_fin).format('DD/MM/YYYY') ? moment(this.state.fecha_inicio).format('DD/MM/YYYY') : moment(this.state.fecha_fin).format('DD/MM/YYYY') + ' - ' + moment(this.state.fecha_fin).format('DD/MM/YYYY')) : this.state.lista_cargos.length > 0 ? React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Cargos\") : React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Pagos\"), this.state.lista_saldos.length > 0 ? React.createElement(\"table\", {\n      style: {\n        marginTop: '10px',\n        width: '100%'\n      },\n      border: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Monto\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.state.lista_saldos.length > 0 ? this.state.lista_saldos.map((item, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, moment(item.fecha_saldo).format(\"DD MMMM YYYY\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, item.monto_saldo))) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Sin registro\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Sin registro\")))) : this.state.lista_cargos.length > 0 ? React.createElement(\"table\", {\n      style: {\n        marginTop: '10px',\n        width: '100%'\n      },\n      border: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Monto\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, this.state.lista_cargos.length > 0 ? this.state.lista_cargos.map((item, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, moment(item.fecha_cargo).format(\"DD MMMM YYYY\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, item.monto_saldo))) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Sin registro\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Sin registro\")))) : React.createElement(\"table\", {\n      style: {\n        marginTop: '10px',\n        width: '100%'\n      },\n      border: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Fecha\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Monto\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, this.state.lista_pagos.length > 0 ? this.state.lista_pagos.map((item, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, moment(item.fecha_pago).format(\"DD MMMM YYYY\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, item.monto_pago))) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Sin registro\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Sin registro\"))))))));\n  }\n\n}\n\nexport default Estandar;","map":{"version":3,"sources":["C:/xampp/htdocs/Charlie_Brown/react/src/components/Estandar/Estandar.js"],"names":["React","Component","Fragment","UsuarioService","PagoService","CargoService","SaldoService","Header","ReactLocalStorageService","Grid","TextField","KeyboardDatePicker","MuiPickersUtilsProvider","DateFnsUtils","Button","moment","Estandar","constructor","props","state","RefrechList","all","then","response","setState","lista_saldos","data","catch","error","alert","mensaje","params","id_usuario","show","saldo_total","saldo","lista","listSaldos","item","fecha_inicio","fecha_fin","lista_pagos","lista_cargos","listCargos","get","listPagos","pagos","add","delete","updateDate","date","toString","updateDate2","Usr","match","Date","render","padding","textAlign","e","value","console","log","margin","width","length","format","marginTop","map","index","fecha_saldo","monto_saldo","fecha_cargo","fecha_pago","monto_pago"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,wBAAR,QAAuC,0BAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,kBAAR,EAA4BC,uBAA5B,QAA0D,sBAA1D;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,MAAMC,QAAN,SAAuBf,SAAvB,CAAiC;AAI7BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,KAEmB,GAFX,EAEW;;AAAA,SAiBnBC,WAjBmB,GAiBL,MAAM;AAChB,WAAKC,GAAL;AACH,KAnBkB;;AAAA,SAqBnBA,GArBmB,GAqBb,MAAM;AACRlB,MAAAA,cAAc,CAACkB,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AAClC,aAAKC,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAEF,QAAQ,CAACG;AADb,SAAd;AAGH,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAI,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAWA,UAAIC,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGA7B,MAAAA,cAAc,CAAC8B,IAAf,CAAoBF,MAApB,EAA4BT,IAA5B,CAAiCC,QAAQ,IAAI;AACzC,aAAKC,QAAL,CAAc;AACVU,UAAAA,WAAW,EAAEX,QAAQ,CAACG,IAAT,CAAcS;AADjB,SAAd;AAGH,OAJD,EAIGR,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVY,UAAAA,KAAK,EAAE;AADG,SAAd;AAGAP,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAUA,WAAKO,UAAL;AACH,KA/CkB;;AAAA,SAiDnBA,UAjDmB,GAiDLC,IAAD,IAAU;AACnB,UAAIP,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;;AAGA,UAAIM,IAAJ,EAAU;AACNP,QAAAA,MAAM,GAAG;AACLC,UAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UADlB;AAELO,UAAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWoB,YAFpB;AAGLC,UAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWqB;AAHjB,SAAT;AAKH;;AACDlC,MAAAA,YAAY,CAACe,GAAb,CAAiBU,MAAjB,EAAyBT,IAAzB,CAA8BC,QAAQ,IAAI;AACtC,aAAKC,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAE,EADH;AAEVhB,UAAAA,YAAY,EAAEF,QAAQ,CAACG,IAFb;AAGVgB,UAAAA,YAAY,EAAE;AAHJ,SAAd;AAKH,OAND,EAMGf,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAZ,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KAxEkB;;AAAA,SA0EnBa,UA1EmB,GA0EN,MAAM;AACf,UAAIZ,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UADd;AAETO,QAAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWoB,YAFhB;AAGTC,QAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWqB;AAHb,OAAb;AAKAnC,MAAAA,YAAY,CAACuC,GAAb,CAAiBb,MAAjB,EAAyBT,IAAzB,CAA8BC,QAAQ,IAAI;AACtC,aAAKC,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAE,EADH;AAEVhB,UAAAA,YAAY,EAAE,EAFJ;AAGViB,UAAAA,YAAY,EAAEnB,QAAQ,CAACG;AAHb,SAAd;AAKH,OAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAZ,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KA5FkB;;AAAA,SA8FnBe,SA9FmB,GA8FNP,IAAD,IAAU;AAClB,UAAIP,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UADd;AAETO,QAAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWoB,YAFhB;AAGTC,QAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWqB;AAHb,OAAb;AAMApC,MAAAA,WAAW,CAAC6B,IAAZ,CAAiBF,MAAjB,EAAyBT,IAAzB,CAA8BC,QAAQ,IAAI;AACtC,aAAKC,QAAL,CAAc;AACVkB,UAAAA,YAAY,EAAE,EADJ;AAEVjB,UAAAA,YAAY,EAAE,EAFJ;AAGVgB,UAAAA,WAAW,EAAElB,QAAQ,CAACG;AAHZ,SAAd;AAKH,OAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAE;AADH,SAAd;AAGAZ,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OAXD;AAYH,KAjHkB;;AAAA,SAmHnBgB,KAnHmB,GAmHX,MAAM;AACV,UAAIf,MAAM,GAAG;AACTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AADd,OAAb;AAGA5B,MAAAA,WAAW,CAAC2C,GAAZ,CAAgBhB,MAAhB,EAAwBT,IAAxB,CAA6BC,QAAQ,IAAI;AACrC,aAAKC,QAAL,CAAc;AACViB,UAAAA,WAAW,EAAElB,QAAQ,CAACG;AADZ,SAAd;AAGH,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAI;AACd,aAAKJ,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAI,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OATD;AAUH,KAjIkB;;AAAA,SAmInBkB,MAnImB,GAmITV,IAAD,IAAU;AACfnC,MAAAA,cAAc,CAAC6C,MAAf,CAAsBV,IAAtB,EAA4BhB,IAA5B,CAAiCC,QAAQ,IAAI;AACzCM,QAAAA,KAAK,CAACN,QAAQ,CAACO,OAAV,CAAL;AACA,aAAKV,WAAL;AACH,OAHD,EAGGO,KAHH,CAGSC,KAAK,IAAI;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,OALD;AAMH,KA1IkB;;AAAA,SA4InBmB,UA5ImB,GA4ILC,IAAD,IAAU;AACnB,WAAK1B,QAAL,CAAc;AACVe,QAAAA,YAAY,EAAEW,IAAI,CAACC,QAAL;AADJ,OAAd;AAGH,KAhJkB;;AAAA,SAkJnBC,WAlJmB,GAkJJF,IAAD,IAAU;AACpB,WAAK1B,QAAL,CAAc;AACVgB,QAAAA,SAAS,EAAEU,IAAI,CAACC,QAAL;AADD,OAAd;AAGH,KAtJkB;;AAEf,QAAIE,GAAG,GAAG7C,wBAAwB,CAACoC,GAAzB,CAA6B,KAA7B,KAAuC,EAAjD;AAEA,SAAKzB,KAAL,GAAa;AACTY,MAAAA,MAAM,EAAEb,KAAK,CAACoC,KAAN,CAAYvB,MADX;AAGTN,MAAAA,YAAY,EAAE,EAHL;AAITiB,MAAAA,YAAY,EAAE,EAJL;AAKTD,MAAAA,WAAW,EAAE,EALJ;AAMTT,MAAAA,UAAU,EAAEqB,GAAG,CAACrB,UANP;AAOTO,MAAAA,YAAY,EAAE,IAAIgB,IAAJ,EAPL;AAQTf,MAAAA,SAAS,EAAE,IAAIe,IAAJ;AARF,KAAb;AAUA,SAAKlC,GAAL;AACH;;AAyIDmC,EAAAA,MAAM,GAAG;AAAA,UAEEzB,MAFF,GAEY,KAAKb,KAAL,CAAWoC,KAFvB,CAEEvB,MAFF;AAIL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD,oBAAY,KAAKb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAII;AAAK,MAAA,KAAK,EAAE;AAACuC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,UAAU,EAAC,QAA3C;AAAoD,MAAA,OAAO,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,MAAM,EAAC,QAHX;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,QAAQ,MALZ;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,YAAY,EAAC,KAPjB;AAQI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWe,WARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAFJ,EAiBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACwB,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAE7C,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,cAAc,MADlB;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,MAAM,EAAC,YAHX;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,EAAE,EAAC,oBALP;AAMI,MAAA,KAAK,EAAC,gBANV;AAOI,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWoB,YAPtB;AAQI,MAAA,QAAQ,EAAE,CAACoB,CAAD,EAAIC,KAAJ,KAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKX,UAAL,CAAgBW,KAAhB;AACH,OAXL;AAYI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAjBJ,EAuCI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAE7C,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,cAAc,MADlB;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,MAAM,EAAC,YAHX;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,EAAE,EAAC,oBALP;AAMI,MAAA,KAAK,EAAC,gBANV;AAOI,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWqB,SAPtB;AAQI,MAAA,QAAQ,EAAE,CAACmB,CAAD,EAAIC,KAAJ,KAAc;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKR,WAAL,CAAiBQ,KAAjB;AACH,OAXL;AAYI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAvCJ,EA8DI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAK3B,UAAL,CAAgB,IAAhB,CAA3D;AACQ,MAAA,KAAK,EAAC,SADd;AACwB,MAAA,OAAO,EAAC,WADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,CA9DJ,EAsEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACqB,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKrB,UAAL,EAA3D;AACQ,MAAA,KAAK,EAAC,SADd;AACwB,MAAA,OAAO,EAAC,WADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CAtEJ,EA8EI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACe,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAf;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKnB,SAAL,EAA3D;AACQ,MAAA,KAAK,EAAC,WADd;AAC0B,MAAA,OAAO,EAAC,WADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CA9EJ,EAuFI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,EAAvC;AAA2C,MAAA,EAAE,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAK1B,KAAL,CAAWM,YAAX,CAAwBwC,MAAxB,GAAiC,CAAjC,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAelD,MAAM,CAAC,KAAKI,KAAL,CAAWoB,YAAZ,CAAN,CAAgC2B,MAAhC,CAAuC,YAAvC,KAAwDnD,MAAM,CAAC,KAAKI,KAAL,CAAWqB,SAAZ,CAAN,CAA6B0B,MAA7B,CAAoC,YAApC,CAAxD,GACXnD,MAAM,CAAC,KAAKI,KAAL,CAAWoB,YAAZ,CAAN,CAAgC2B,MAAhC,CAAuC,YAAvC,CADW,GAC4CnD,MAAM,CAAC,KAAKI,KAAL,CAAWqB,SAAZ,CAAN,CAA6B0B,MAA7B,CAAoC,YAApC,IAAoD,KAApD,GAA4DnD,MAAM,CAAC,KAAKI,KAAL,CAAWqB,SAAZ,CAAN,CAA6B0B,MAA7B,CAAoC,YAApC,CADvH,CADJ,GAII,KAAK/C,KAAL,CAAWuB,YAAX,CAAwBuB,MAAxB,GAAiC,CAAjC,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,GAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATZ,EAcQ,KAAK9C,KAAL,CAAWM,YAAX,CAAwBwC,MAAxB,GAAiC,CAAjC,GACI;AAAO,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAE,MAAZ;AAAoBH,QAAAA,KAAK,EAAE;AAA3B,OAAd;AAAkD,MAAA,MAAM,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK7C,KAAL,CAAWM,YAAX,CAAwBwC,MAAxB,GAAiC,CAAjC,GAAqC,KAAK9C,KAAL,CAAWM,YAAX,CAAwB2C,GAAxB,CAA4B,CAAC9B,IAAD,EAAO+B,KAAP,KAC9D;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKtD,MAAM,CAACuB,IAAI,CAACgC,WAAN,CAAN,CAAyBJ,MAAzB,CAAgC,cAAhC,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK5B,IAAI,CAACiC,WAAV,CAFJ,CADkC,CAArC,GAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADC,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFC,CANL,CAPJ,CADJ,GAqBI,KAAKpD,KAAL,CAAWuB,YAAX,CAAwBuB,MAAxB,GAAiC,CAAjC,GACA;AAAO,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAE,MAAZ;AAAoBH,QAAAA,KAAK,EAAE;AAA3B,OAAd;AAAkD,MAAA,MAAM,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK7C,KAAL,CAAWuB,YAAX,CAAwBuB,MAAxB,GAAiC,CAAjC,GAAqC,KAAK9C,KAAL,CAAWuB,YAAX,CAAwB0B,GAAxB,CAA4B,CAAC9B,IAAD,EAAO+B,KAAP,KAC9D;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKtD,MAAM,CAACuB,IAAI,CAACkC,WAAN,CAAN,CAAyBN,MAAzB,CAAgC,cAAhC,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK5B,IAAI,CAACiC,WAAV,CAFJ,CADkC,CAArC,GAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADC,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFC,CANL,CAPJ,CADA,GAsBA;AAAO,MAAA,KAAK,EAAE;AAACJ,QAAAA,SAAS,EAAE,MAAZ;AAAoBH,QAAAA,KAAK,EAAE;AAA3B,OAAd;AAAkD,MAAA,MAAM,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADA,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK7C,KAAL,CAAWsB,WAAX,CAAuBwB,MAAvB,GAAgC,CAAhC,GAAoC,KAAK9C,KAAL,CAAWsB,WAAX,CAAuB2B,GAAvB,CAA2B,CAAC9B,IAAD,EAAO+B,KAAP,KAC5D;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKtD,MAAM,CAACuB,IAAI,CAACmC,UAAN,CAAN,CAAwBP,MAAxB,CAA+B,cAA/B,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK5B,IAAI,CAACoC,UAAV,CAFJ,CADiC,CAApC,GAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADC,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFC,CANL,CAPJ,CAzDZ,CAvFJ,CADJ,CAJJ,CADJ;AAmLH;;AAnV4B;;AAsVjC,eAAe1D,QAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\n\r\nimport UsuarioService from \"../../services/Usuario/UsuarioService\";\r\nimport PagoService from \"../../services/Pagos/PagosService\";\r\nimport CargoService from \"../../services/Cargo/CargoService\";\r\nimport SaldoService from \"../../services/Saldo/SaldoService\";\r\nimport Header from \"../../includes/Header\";\r\nimport {ReactLocalStorageService} from \"../../settings/Libs/Libs\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\n\r\n\r\nclass Estandar extends Component {\r\n\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let Usr = ReactLocalStorageService.get('Usr') || {};\r\n\r\n        this.state = {\r\n            params: props.match.params,\r\n\r\n            lista_saldos: [],\r\n            lista_cargos: [],\r\n            lista_pagos: [],\r\n            id_usuario: Usr.id_usuario,\r\n            fecha_inicio: new Date(),\r\n            fecha_fin: new Date(),\r\n        };\r\n        this.all();\r\n    }\r\n\r\n    RefrechList = () => {\r\n        this.all();\r\n    };\r\n\r\n    all = () => {\r\n        UsuarioService.all().then(response => {\r\n            this.setState({\r\n                lista_saldos: response.data,\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_saldos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        UsuarioService.show(params).then(response => {\r\n            this.setState({\r\n                saldo_total: response.data.saldo\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n        this.listSaldos();\r\n    };\r\n\r\n    listSaldos = (item) => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        if (item) {\r\n            params = {\r\n                id_usuario: this.state.id_usuario,\r\n                fecha_inicio: this.state.fecha_inicio,\r\n                fecha_fin: this.state.fecha_fin\r\n            };\r\n        }\r\n        SaldoService.all(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: [],\r\n                lista_saldos: response.data,\r\n                lista_cargos: []\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    listCargos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario,\r\n            fecha_inicio: this.state.fecha_inicio,\r\n            fecha_fin: this.state.fecha_fin\r\n        };\r\n        CargoService.get(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: [],\r\n                lista_saldos: [],\r\n                lista_cargos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    listPagos = (item) => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario,\r\n            fecha_inicio: this.state.fecha_inicio,\r\n            fecha_fin: this.state.fecha_fin\r\n        };\r\n\r\n        PagoService.show(params).then(response => {\r\n            this.setState({\r\n                lista_cargos: [],\r\n                lista_saldos: [],\r\n                lista_pagos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_pagos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    pagos = () => {\r\n        let params = {\r\n            id_usuario: this.state.id_usuario\r\n        };\r\n        PagoService.add(params).then(response => {\r\n            this.setState({\r\n                lista_pagos: response.data\r\n            });\r\n        }).catch(error => {\r\n            this.setState({\r\n                lista_saldos: []\r\n            });\r\n            alert(error.mensaje);\r\n        });\r\n    }\r\n\r\n    delete = (item) => {\r\n        UsuarioService.delete(item).then(response => {\r\n            alert(response.mensaje);\r\n            this.RefrechList();\r\n        }).catch(error => {\r\n            alert(error.mensaje);\r\n        });\r\n    };\r\n\r\n    updateDate = (date) => {\r\n        this.setState({\r\n            fecha_inicio: date.toString()\r\n        })\r\n    }\r\n\r\n    updateDate2 = (date) => {\r\n        this.setState({\r\n            fecha_fin: date.toString()\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {params} = this.props.match;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <Header {...this.props}/>\r\n\r\n                <div style={{padding: '15px'}}>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"center\"}}>\r\n\r\n                                <TextField\r\n                                    label=\"Saldo Total\"\r\n                                    type=\"text\"\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                    fullWidth\r\n                                    defaultValue=\"0.0\"\r\n                                    value={this.state.saldo_total}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"right\"}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Fecha de cargo\"\r\n                                        value={this.state.fecha_inicio}\r\n                                        onChange={(e, value) => {\r\n                                            console.log(value);\r\n                                            this.updateDate(value)\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"right\"}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Fecha de cargo\"\r\n                                        value={this.state.fecha_fin}\r\n                                        onChange={(e, value) => {\r\n                                            console.log(value);\r\n                                            this.updateDate2(value)\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.listSaldos(true)}\r\n                                        color=\"default\" variant=\"contained\">\r\n                                    Consultar Saldo\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.listCargos()}\r\n                                        color=\"primary\" variant=\"contained\">\r\n                                    Realizar Pago\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} md={4} lg={2} xl={2}>\r\n                            <div style={{textAlign: \"left\"}}>\r\n                                <Button style={{margin: '', width: '100%'}} onClick={() => this.listPagos()}\r\n                                        color=\"secondary\" variant=\"contained\">\r\n                                    Mis Pagos\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                            {\r\n                                this.state.lista_saldos.length > 0 ? (\r\n                                    <label>Saldos {moment(this.state.fecha_inicio).format('DD/MM/YYYY') == moment(this.state.fecha_fin).format('DD/MM/YYYY') ?\r\n                                        moment(this.state.fecha_inicio).format('DD/MM/YYYY') : moment(this.state.fecha_fin).format('DD/MM/YYYY') + ' - ' + moment(this.state.fecha_fin).format('DD/MM/YYYY')}\r\n                                    </label>\r\n                                ) : this.state.lista_cargos.length > 0 ? (\r\n                                    <label>Cargos</label>\r\n                                ) : (\r\n                                    <label>Pagos</label>\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                this.state.lista_saldos.length > 0 ? (\r\n                                    <table style={{marginTop: '10px', width: '100%'}} border={1}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Fecha</th>\r\n                                            <th>Monto</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {this.state.lista_saldos.length > 0 ? this.state.lista_saldos.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{moment(item.fecha_saldo).format(\"DD MMMM YYYY\")}</td>\r\n                                                <td>{item.monto_saldo}</td>\r\n                                            </tr>\r\n                                        )) : <tr>\r\n                                            <td>Sin registro</td>\r\n                                            <td>Sin registro</td>\r\n                                        </tr>\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                ) : this.state.lista_cargos.length > 0 ? (\r\n                                    <table style={{marginTop: '10px', width: '100%'}} border={1}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Fecha</th>\r\n                                            <th>Monto</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {this.state.lista_cargos.length > 0 ? this.state.lista_cargos.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{moment(item.fecha_cargo).format(\"DD MMMM YYYY\")}</td>\r\n                                                <td>{item.monto_saldo}</td>\r\n                                            </tr>\r\n                                        )) : <tr>\r\n                                            <td>Sin registro</td>\r\n                                            <td>Sin registro</td>\r\n                                        </tr>\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                ) : (\r\n                                    <table style={{marginTop: '10px', width: '100%'}} border={1}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Fecha</th>\r\n                                            <th>Monto</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {this.state.lista_pagos.length > 0 ? this.state.lista_pagos.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>{moment(item.fecha_pago).format(\"DD MMMM YYYY\")}</td>\r\n                                                <td>{item.monto_pago}</td>\r\n                                            </tr>\r\n                                        )) : <tr>\r\n                                            <td>Sin registro</td>\r\n                                            <td>Sin registro</td>\r\n                                        </tr>\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                )\r\n                            }\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Estandar;\r\n"]},"metadata":{},"sourceType":"module"}